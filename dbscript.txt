#db backlog_mgmgt


CREATE TABLE Users(id int NOT NULL AUTO_INCREMENT,
userName varchar(20),
password varchar(20),
role varchar(2),
email varchar(50),
PRIMARY KEY(id) );

CREATE TABLE Tasks(id int NOT NULL AUTO_INCREMENT,
title varchar(20),
description varchar(250),
creatorId int,
assigneeId int,
logHours int DEFAULT 0,
dueDate timestamp DEFAULT CURRENT_TIMESTAMP,
done int DEFAULT 0,
priority varchar(2),

PRIMARY KEY(id),
FOREIGN KEY(creatorId) REFERENCES Users(id)
FOREIGN KEY(assigneeId) REFERENCES Users(id));


#insert rows

INSERT INTO Users(id, userName, password, role, email) VALUES(1,'Пенда', 'pass', 'D','penda@babamarta.com');
INSERT INTO Users(id, userName, password, role, email) VALUES(2,'Пижо', 'pass', 'PO','pijo@mart.bg');


#insert tasks

INSERT INTO Tasks(id, title, description, creatorId, assigneeId, logHours, dueDate)
VALUES(1, 'hash passwords', 'Hash user passwords before storing into database', 2, 1, 0, '2018-01-30');

 

INSERT INTO Tasks(id, title, description, creatorId, assigneeId, logHours, dueDate)
VALUES(2, 'user management tab', 'Create tab for user management for admins', 2, 1, 0, '2018-02-10');

 

INSERT INTO Tasks(id, title, description, creatorId, assigneeId, logHours, dueDate)
VALUES(3, 'user creation', 'Introduce functionality for creating users', 2, 1, 1, '2018-02-20');

 

INSERT INTO Tasks(id, title, description, creatorId, assigneeId, logHours, dueDate)
VALUES(4, 'introduce more roles', 'Hash user passwords before storing into database', 2, 1, 2, '2018-02-30');

INSERT INTO Tasks(id, title, description, creatorId, assigneeId, logHours, dueDate)
VALUES(5, 'documentation', 'document user managment functionalities', 2, 1, 0, '2018-03-01');